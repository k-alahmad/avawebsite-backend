// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//AVA Real Estate Main Schema 
model Team {
  id           String   @id @default(uuid())
  Title        String   @unique
  Description  String?
  ActiveStatus Boolean  @default(true)
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
  Users        Users[]
  Image        Images?
}

model Users {
  id           String     @id @default(uuid())
  Name         String
  DOB          DateTime?
  Email        String     @unique
  PhoneNo      String?
  ActiveStatus Boolean    @default(true)
  Gender       Gender?
  Password     String
  refreshToken String?
  Image        Images?
  Team         Team?      @relation(fields: [teamID], references: [id])
  teamID       String?
  Role         Role?      @relation(fields: [roleID], references: [id])
  roleID       String?
  Articles     Articles[]
  CreatedAt    DateTime   @default(now())
  UpdatedAt    DateTime   @updatedAt
}

enum Gender {
  Male
  Female
}

model Role {
  id             String           @id @default(uuid())
  Name           String?          @unique
  ActiveStatus   Boolean          @default(true)
  CreatedAt      DateTime         @default(now())
  UpdatedAt      DateTime         @updatedAt
  Users          Users[]
  Role_Resources Role_Resources[]
}

model Resources {
  id             String           @id @default(uuid())
  Name           String           @unique
  Description    String
  ActiveStatus   Boolean          @default(true)
  CreatedAt      DateTime         @default(now())
  UpdatedAt      DateTime         @updatedAt
  Role_Resources Role_Resources[]
}

model Role_Resources {
  id          String    @id @default(uuid())
  Create      Boolean
  Read        Boolean
  Update      Boolean
  Delete      Boolean
  Role        Role      @relation(fields: [roleID], references: [id])
  resource    Resources @relation(fields: [resourcesID], references: [id])
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
  roleID      String
  resourcesID String

  @@unique([roleID, resourcesID])
}

model Articles {
  id                   String                 @id @default(uuid())
  MinRead              Int
  ActiveStatus         Boolean                @default(true)
  User                 Users                  @relation(fields: [usersID], references: [id])
  usersID              String
  Image                Images?                @relation(fields: [imagesId], references: [id])
  CreatedAt            DateTime               @default(now())
  UpdatedAt            DateTime               @updatedAt
  Articles_Translation Articles_Translation[]
  imagesId             String?
}

model Images {
  id        String     @id @default(uuid())
  URL       String
  Alt       String
  Width     Int?
  Height    Int?
  Size      Float?
  Type      String?
  Team      Team?      @relation(fields: [teamID], references: [id])
  user      Users?     @relation(fields: [usersID], references: [id])
  usersID   String?    @unique
  CreatedAt DateTime   @default(now())
  UpdatedAt DateTime   @updatedAt
  teamID    String?    @unique
  Articles  Articles[]
  Address   Address[]
}

model Address {
  id                  String                @id @default(uuid())
  Longitude           Float
  Latitude            Float
  ActiveStatus        Boolean               @default(true)
  Address             Address?              @relation("SubAddress", fields: [addressID], references: [id])
  addressID           String?
  Image               Images                @relation(fields: [imagesId], references: [id])
  Addresses           Address[]             @relation("SubAddress")
  CreatedAt           DateTime              @default(now())
  UpdatedAt           DateTime              @updatedAt
  Address_Translation Address_Translation[]
  imagesId            String
}

model Unit {
  id               String             @id @default(uuid())
  conversionRate   Int
  ActiveStatus     Boolean            @default(true)
  CreatedAt        DateTime           @default(now())
  UpdatedAt        DateTime           @updatedAt
  Unit_Translation Unit_Translation[]
}

model Currency {
  id                   String                 @id @default(uuid())
  conversionRate       Int
  ActiveStatus         Boolean                @default(true)
  CreatedAt            DateTime               @default(now())
  UpdatedAt            DateTime               @updatedAt
  Currency_Translation Currency_Translation[]
}

//Localization Sub-Schema 
model Languages {
  id                   String                 @id @default(uuid())
  Name                 String                 @unique
  Code                 String?                @unique
  Articles_Translation Articles_Translation[]
  CreatedAt            DateTime               @default(now())
  UpdatedAt            DateTime               @updatedAt
  Address_Translation  Address_Translation[]
  Unit_Translation     Unit_Translation[]
  Currency_Translation Currency_Translation[]
}

model Articles_Translation {
  id          String    @id @default(uuid())
  Title       String
  Description String    @db.Text
  Caption     String
  Language    Languages @relation(fields: [languagesID], references: [id])
  languagesID String
  article     Articles  @relation(fields: [articlesId], references: [id])
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
  articlesId  String
}

model Address_Translation {
  id          String    @id @default(uuid())
  Name        String
  Language    Languages @relation(fields: [languagesID], references: [id])
  languagesID String
  Address     Address   @relation(fields: [addressID], references: [id])
  addressID   String
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
}

model Unit_Translation {
  id          String    @id @default(uuid())
  Name        String
  Language    Languages @relation(fields: [languagesID], references: [id])
  languagesID String
  Unit        Unit      @relation(fields: [unitID], references: [id])
  unitID      String
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
}

model Currency_Translation {
  id          String    @id @default(uuid())
  Name        String
  Language    Languages @relation(fields: [languagesID], references: [id])
  languagesID String
  Currency    Currency  @relation(fields: [currencyID], references: [id])
  currencyID  String
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
}
