// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//AVA Real Estate Main Schema 
model Team {
  ID          String   @id @default(uuid())
  Title       String
  Description String
  CreatedAt   DateTime @default(now())
  UpdatedAt   DateTime @updatedAt
  Users       Users[]
}

model Users {
  ID           String     @id @default(uuid())
  Name         String
  DOB          DateTime
  Email        String
  PhoneNo      String
  ActiveStatus Boolean    @default(true)
  Gender       String
  Image        Images?
  Team         Team       @relation(fields: [teamID], references: [ID])
  teamID       String
  Role         Role       @relation(fields: [roleID], references: [ID])
  roleID       String
  Articles     Articles[]
  CreatedAt    DateTime   @default(now())
  UpdatedAt    DateTime   @updatedAt
}

model Role {
  ID             String           @id @default(uuid())
  Name           String
  ActiveStatus   Boolean          @default(true)
  CreatedAt      DateTime         @default(now())
  UpdatedAt      DateTime         @updatedAt
  Users          Users[]
  Role_Resources Role_Resources[]
}

model Resources {
  ID             String           @id @default(uuid())
  Name           String
  Description    String
  ActiveStatus   Boolean          @default(true)
  CreatedAt      DateTime         @default(now())
  UpdatedAt      DateTime         @updatedAt
  Role_Resources Role_Resources[]
}

model Role_Resources {
  ID          String    @id @default(uuid())
  Create      Boolean
  Read        Boolean
  Update      Boolean
  Delete      Boolean
  Role        Role      @relation(fields: [roleID], references: [ID])
  resource    Resources @relation(fields: [resourcesID], references: [ID])
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
  roleID      String
  resourcesID String
}

model Articles {
  ID           String   @id @default(uuid())
  MinRead      Int
  ActiveStatus Boolean  @default(true)
  User         Users    @relation(fields: [usersID], references: [ID])
  usersID      String
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
}

model Images {
  ID        String   @id @default(uuid())
  URL       String
  Alt       String
  Width     Int
  Height    Int
  Size      Float
  Type      String
  user      Users    @relation(fields: [usersID], references: [ID])
  usersID   String   @unique
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

// model Address {
//   ID        String    @id @default(uuid())
//   Longitude Float
//   Latitude  Float
//   Address   Address   @relation(fields: [addressID], references: [ID])
//   CreatedAt DateTime  @default(now())
//   UpdatedAt DateTime  @updatedAt
//   Address   Address[]
//   addressID String
// }

//Localization Sub-Schema 
model Languages {
  ID                   String                 @id @default(uuid())
  Name                 String                 @unique
  Code                 String?                @unique
  Articles_Translation Articles_Translation[]
  CreatedAt            DateTime               @default(now())
  UpdatedAt            DateTime               @updatedAt
}

model Articles_Translation {
  ID          String    @id @default(uuid())
  Title       String
  Description String
  Caption     String
  Language    Languages @relation(fields: [languagesID], references: [ID])
  languagesID String
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime  @updatedAt
}
